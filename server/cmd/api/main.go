// Code generated by hertz generator.

package main

import (
	"fmt"

	"github.com/cloudwego/hertz/pkg/app/server"
	hertztracing "github.com/hertz-contrib/obs-opentelemetry/tracing"
	"github.com/hertz-contrib/pprof"

	"github.com/jjeejj/Hertz-Kitex-Micro-Service-Template/pkg/consts"
	"github.com/jjeejj/Hertz-Kitex-Micro-Service-Template/pkg/log"
	"github.com/jjeejj/Hertz-Kitex-Micro-Service-Template/server/cmd/api/global"
	"github.com/jjeejj/Hertz-Kitex-Micro-Service-Template/server/cmd/api/initialize"
	"github.com/jjeejj/Hertz-Kitex-Micro-Service-Template/server/cmd/api/initialize/rpc"
)

func main() {
	// initialize
	r, info := initialize.InitNacos()
	log.InitKLogger(consts.HlogFilePath, global.ServerConfig.LogLevel)
	tracer, cfg := hertztracing.NewServerTracer()
	rpc.Init()
	// create a new server
	h := server.New(
		tracer,
		server.WithHostPorts(fmt.Sprintf(":%d", global.ServerConfig.Port)),
		server.WithRegistry(r, info),
		server.WithHandleMethodNotAllowed(true),
	)
	// use pprof & tracer mw
	pprof.Register(h)
	h.Use(hertztracing.ServerMiddleware(cfg))
	register(h)
	h.Spin()
}
