// Code generated by Kitex v0.4.4. DO NOT EDIT.

package mqservice

import (
	"context"
	client "github.com/cloudwego/kitex/client"
	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
	mq "github.com/jjeejj/Hertz-Kitex-Micro-Service-Template/kitex_gen/mq"
)

func serviceInfo() *kitex.ServiceInfo {
	return mqServiceServiceInfo
}

var mqServiceServiceInfo = NewServiceInfo()

func NewServiceInfo() *kitex.ServiceInfo {
	serviceName := "MqService"
	handlerType := (*mq.MqService)(nil)
	methods := map[string]kitex.MethodInfo{
		"AddChannel": kitex.NewMethodInfo(addChannelHandler, newMqServiceAddChannelArgs, newMqServiceAddChannelResult, false),
	}
	extra := map[string]interface{}{
		"PackageName": "mq",
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName:     serviceName,
		HandlerType:     handlerType,
		Methods:         methods,
		PayloadCodec:    kitex.Thrift,
		KiteXGenVersion: "v0.4.4",
		Extra:           extra,
	}
	return svcInfo
}

func addChannelHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*mq.MqServiceAddChannelArgs)
	realResult := result.(*mq.MqServiceAddChannelResult)
	success, err := handler.(mq.MqService).AddChannel(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newMqServiceAddChannelArgs() interface{} {
	return mq.NewMqServiceAddChannelArgs()
}

func newMqServiceAddChannelResult() interface{} {
	return mq.NewMqServiceAddChannelResult()
}

type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}

func (p *kClient) AddChannel(ctx context.Context, req *mq.AddChannelReq) (r *mq.AddChannelResp, err error) {
	var _args mq.MqServiceAddChannelArgs
	_args.Req = req
	var _result mq.MqServiceAddChannelResult
	if err = p.c.Call(ctx, "AddChannel", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
